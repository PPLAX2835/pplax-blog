<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.pplax.message.dao.PPLAXEmailDao">

    <resultMap id="emailResultMap" type="xyz.pplax.message.po.Email">
        <id column="uid" property="uid"/>
        <result column="user_uid" property="userUid"/>
        <result column="email_host" property="emailHost"/>
        <result column="email_password" property="emailPassword"/>
        <result column="protocol" property="protocol"/>
        <result column="email" property="email"/>
        <result column="port" property="port"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

  	<sql id="Where_Condition">
        <where>
            <if test="uid != null">
                AND uid = #{uid}
            </if>
            <if test="userUid != null">
                AND user_uid = #{userUid}
            </if>
            <if test="emailHost != null and emailHost != '' ">
                AND email_host = #{emailHost}
            </if>
            <if test="emailPassword != null and emailPassword != '' ">
                AND email_password = #{emailPassword}
            </if>
            <if test="protocol != null and protocol != '' ">
                AND protocol = #{protocol}
            </if>
            <if test="email != null and email != '' ">
                AND email = #{email}
            </if>
            <if test="port != null">
                AND port = #{port}
            </if>
            <if test="createTime != null and createTime != '' ">
                AND create_time = #{createTime}
            </if>
            <if test="updateTime != null and updateTime != '' ">
                AND update_time = #{updateTime}
            </if>
        </where>
  	</sql>

    <sql id="Base_Column_List">
        uid,
        user_uid,
        email_host,
        email_password,
        protocol,
        email,
        port,
        create_time,
        update_time
    </sql>

	<!-- common methods start -->
    <!-- 新增一条数据 -->
	<insert id="insert" parameterType="xyz.pplax.message.po.Email" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO au_email (
            <trim suffixOverrides=",">
                <if test="uid != null">
                    uid,
                </if>
                <if test="userUid != null">
                    user_uid,
                </if>
                <if test="emailHost != null and emailHost != '' ">
                    email_host,
                </if>
                <if test="emailPassword != null and emailPassword != '' ">
                    email_password,
                </if>
                <if test="protocol != null and protocol != '' ">
                    protocol,
                </if>
                <if test="email != null and email != '' ">
                    email,
                </if>
                <if test="port != null">
                    port,
                </if>
                <if test="createTime != null and createTime != '' ">
                    create_time,
                </if>
                <if test="updateTime != null and updateTime != '' ">
                    update_time,
                </if>
            </trim>
        ) VALUES (
            <trim suffixOverrides=",">
                <if test="uid != null">
                 #{uid},
                </if>
                <if test="userUid != null">
                 #{userUid},
                </if>
                <if test="emailHost != null and emailHost != '' ">
                 #{emailHost},
                </if>
                <if test="emailPassword != null and emailPassword != '' ">
                 #{emailPassword},
                </if>
                <if test="protocol != null and protocol != '' ">
                 #{protocol},
                </if>
                <if test="email != null and email != '' ">
                 #{email},
                </if>
                <if test="port != null">
                 #{port},
                </if>
                <if test="createTime != null and createTime != '' ">
                 #{createTime},
                </if>
                <if test="updateTime != null and updateTime != '' ">
                 #{updateTime},
                </if>
            </trim>
        )
	</insert>

    <!-- 通过主键删除数据 -->
	<delete id="deleteById" parameterType="Long">
        DELETE FROM au_email
        WHERE uid = #{uid} 
	</delete>

    <!-- 根据传入参数删除数据 -->
	<delete id="deleteByWhere" parameterType="xyz.pplax.message.po.Email">
        DELETE FROM au_email
        <include refid="Where_Condition" />
	</delete>

    <!-- 根据id更新数据 -->
    <update id="updateById" parameterType="xyz.pplax.message.po.Email">
		UPDATE au_email
		<set>
			<if test="userUid != null">user_uid = #{userUid},</if>
			<if test="emailHost != null and emailHost != '' ">email_host = #{emailHost},</if>
			<if test="emailPassword != null and emailPassword != '' ">email_password = #{emailPassword},</if>
			<if test="protocol != null and protocol != '' ">protocol = #{protocol},</if>
			<if test="email != null and email != '' ">email = #{email},</if>
			<if test="port != null">port = #{port},</if>
			<if test="updateTime != null and updateTime != '' ">update_time = #{updateTime},</if>
		</set>
		WHERE
		    uid = #{uid}
	</update>

	<!-- 根据主键查询数据  -->
	<select id="queryById" resultMap="emailResultMap" parameterType="Long">
        SELECT
        <include refid="Base_Column_List" />
  	    FROM au_email
        WHERE
            uid = #{uid}
    </select>

    <!-- 查询一条记录  -->
	<select id="queryOne" resultMap="emailResultMap" parameterType="xyz.pplax.message.po.Email">
         SELECT
         <include refid="Base_Column_List" />
  	     FROM au_email
         <include refid="Where_Condition" />
         LIMIT 1
    </select>

	<!-- 根据传入参数查询数据列表  -->
	<select id="queryListByWhere" resultMap="emailResultMap" parameterType="xyz.pplax.message.po.Email">
        SELECT
        <include refid="Base_Column_List" />
        FROM au_email
        <include refid="Where_Condition" />
    </select>

	<!-- 统计符合条件的数据数量 -->
	<select id="countByWhere" resultType="int" parameterType="xyz.pplax.message.po.Email">
		SELECT COUNT(*) FROM au_email
		<include refid="Where_Condition" />
	</select>

    <!-- 批量插入多条数据 -->
	<insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO au_email (
        	<include refid="Base_Column_List" />
        ) VALUES
        <foreach collection="list" item="item" index= "index" separator =",">
            (
            <trim suffixOverrides=",">
				#{item.uid},
				#{item.userUid},
				#{item.emailHost},
				#{item.emailPassword},
				#{item.protocol},
				#{item.email},
				#{item.port},
				#{item.createTime},
				#{item.updateTime},
            </trim>
            )
        </foreach>
    </insert>
	<!-- common methods end -->

	<!-- 下面的是兼容旧版本 -->
	<select id="queryListByCondition" resultMap="emailResultMap">
		select
		<include refid="Base_Column_List" />
		from au_email
        <where>
            <if test="condition.uid != null">
                and uid=#{condition.uid}
            </if>
            <if test="condition.otherUid != null">
                and user_uid=#{condition.otherUid}
            </if>
            <if test="condition.startTime != null and condition.endTime != null">
                and create_time between #{condition.startTime} and #{condition.endTime}
            </if>
            <if test="condition.keyword != null">
                and email like concat('%', #{condition.keyword}, '%')
            </if>
        </where>
	</select>
</mapper>