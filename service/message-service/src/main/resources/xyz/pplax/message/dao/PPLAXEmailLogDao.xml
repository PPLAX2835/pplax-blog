<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.pplax.message.dao.PPLAXEmailLogDao">

    <resultMap id="emailLogResultMap" type="xyz.pplax.message.po.EmailLog">
        <id column="uid" property="uid"/>
        <result column="user_uid" property="userUid"/>
        <result column="sender" property="sender"/>
        <result column="subject" property="subject"/>
        <result column="content" property="content"/>
        <result column="receiver" property="receiver"/>
        <result column="is_send" property="send"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="Where_Condition">
        <where>
            <if test="uid != null">
                AND uid = #{uid}
            </if>
            <if test="userUid != null">
                AND user_uid = #{userUid}
            </if>
            <if test="sender != null and sender != '' ">
                AND sender = #{sender}
            </if>
            <if test="subject != null and subject != '' ">
                AND subject = #{subject}
            </if>
            <if test="content != null and content != '' ">
                AND content = #{content}
            </if>
            <if test="receiver != null and receiver != '' ">
                AND receiver = #{receiver}
            </if>
            <if test="send != null">
                AND is_send = #{send}
            </if>
            <if test="createTime != null and createTime != '' ">
                AND create_time = #{createTime}
            </if>
            <if test="updateTime != null and updateTime != '' ">
                AND update_time = #{updateTime}
            </if>
        </where>
    </sql>

    <sql id="Base_Column_List">
        uid,
        user_uid,
        sender,
        subject,
        content,
        receiver,
        is_send,
        create_time,
        update_time
    </sql>

    <!-- common methods start -->
    <!-- 新增一条数据 -->
    <insert id="insert" parameterType="xyz.pplax.message.po.EmailLog" useGeneratedKeys="true" keyProperty="uid">
        INSERT INTO au_email_log (
        <trim suffixOverrides=",">
            <if test="uid != null">
                uid,
            </if>
            <if test="userUid != null">
                user_uid,
            </if>
            <if test="sender != null">
                sender,
            </if>
            <if test="subject != null">
                subject,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="receiver != null">
                receiver,
            </if>
            <if test="send != null">
                is_send,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        ) VALUES (
        <trim suffixOverrides=",">
            <if test="uid != null">
                #{uid},
            </if>
            <if test="userUid != null">
                #{userUid},
            </if>
            <if test="sender != null">
                #{sender},
            </if>
            <if test="subject != null">
                #{subject},
            </if>
            <if test="content != null">
                #{content},
            </if>
            <if test="receiver != null">
                #{receiver},
            </if>
            <if test="send != null">
                #{send},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
        </trim>
        )
    </insert>

    <!-- 通过主键删除数据 -->
    <delete id="deleteById" parameterType="Long">
        DELETE FROM au_email_log
        WHERE uid = #{uid}
    </delete>

    <!-- 根据id更新数据 -->
    <update id="updateById" parameterType="xyz.pplax.message.po.EmailLog">
        UPDATE au_email_log
        <set>
            <if test="userUid != null">user_uid = #{userUid},</if>
            <if test="sender != null">sender = #{sender},</if>
            <if test="subject != null">subject = #{subject},</if>
            <if test="content != null">content = #{content},</if>
            <if test="receiver != null">receiver = #{receiver},</if>
            <if test="send != null">is_send = #{send},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </set>
        WHERE
        uid = #{uid}
    </update>

    <!-- 根据主键查询数据  -->
    <select id="queryById" resultMap="emailLogResultMap" parameterType="Long">
        SELECT
        <include refid="Base_Column_List" />
        FROM au_email_log
        WHERE
        uid = #{uid}
    </select>

    <!-- 查询一条记录  -->
    <select id="queryOne" resultMap="emailLogResultMap" parameterType="xyz.pplax.message.po.EmailLog">
        SELECT
        <include refid="Base_Column_List" />
        FROM au_email_log
        <include refid="Where_Condition" />
        LIMIT 1
    </select>

    <!-- 根据传入参数查询数据列表  -->
    <select id="queryListByWhere" resultMap="emailLogResultMap" parameterType="xyz.pplax.message.po.EmailLog">
        SELECT
        <include refid="Base_Column_List" />
        FROM au_email_log
        <include refid="Where_Condition" />
    </select>

    <!-- 统计符合条件的数据数量 -->
    <select id="countByWhere" resultType="int" parameterType="xyz.pplax.message.po.EmailLog">
        SELECT COUNT(*) FROM au_email_log
        <include refid="Where_Condition" />
    </select>

    <!-- 批量插入多条数据 -->
    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO au_email_log (
        <include refid="Base_Column_List" />
        ) VALUES
        <foreach collection="list" item="item" index= "index" separator =",">
            (
            <trim suffixOverrides=",">
                #{item.uid},
                #{item.userUid},
                #{item.sender},
                #{item.subject},
                #{item.content},
                #{item.receiver},
                #{item.send},
                #{item.createTime},
                #{item.updateTime},
            </trim>
            )
        </foreach>
    </insert>
    <!-- common methods end -->

	<!-- 下面的是兼容旧版本 -->
	<select id="queryListByCondition" resultMap="emailLogResultMap">
		select
		<include refid="Base_Column_List" />
		from au_email_log
        <where>
            <if test="condition.uid != null">
                and uid=#{condition.uid}
            </if>
            <if test="condition.keyword != null">
                and receiver like concat(#{condition.keyword}, '%')
            </if>
            <if test="condition.otherUid != null">
                and user_uid=#{condition.otherUid}
            </if>
            <if test="condition.startTime != null and condition.endTime != null">
                and create_time between #{condition.startTime} and #{condition.endTime}
            </if>
            <if test="condition.status != null">
                and is_send=#{condition.status}
            </if>
        </where>
	</select>
</mapper>